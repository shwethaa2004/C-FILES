#include <stdio.h>

// Function to find the transitive closure using Warshall's algorithm
void warshall(int p[][10], int n) {
    int i, j, k;

    for (k = 0; k < n; k++) {
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (p[i][k] && p[k][j]) {
                    p[i][j] = 1;
                }
            }
        }
    }
}

// Function to print the matrix
void printMatrix(int p[][10], int n) {
    int i, j;

    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            printf("%d ", p[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int p[10][10], n, i, j;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &p[i][j]);
        }
    }

    printf("Input Matrix:\n");
    printMatrix(p, n);

    warshall(p, n);

    printf("shortest distance:\n");
    printMatrix(p, n);

    return 0;
}